// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	sample.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
	ByeRequest
	ByeResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	ReqMsg string `protobuf:"bytes,1,opt,name=req_msg,json=reqMsg" json:"req_msg,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

type HelloResponse struct {
	ResMsg string `protobuf:"bytes,1,opt,name=res_msg,json=resMsg" json:"res_msg,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloResponse) GetResMsg() string {
	if m != nil {
		return m.ResMsg
	}
	return ""
}

type ByeRequest struct {
	ReqMsg string `protobuf:"bytes,1,opt,name=req_msg,json=reqMsg" json:"req_msg,omitempty"`
}

func (m *ByeRequest) Reset()                    { *m = ByeRequest{} }
func (m *ByeRequest) String() string            { return proto.CompactTextString(m) }
func (*ByeRequest) ProtoMessage()               {}
func (*ByeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ByeRequest) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

type ByeResponse struct {
	ResMsg string `protobuf:"bytes,1,opt,name=res_msg,json=resMsg" json:"res_msg,omitempty"`
}

func (m *ByeResponse) Reset()                    { *m = ByeResponse{} }
func (m *ByeResponse) String() string            { return proto.CompactTextString(m) }
func (*ByeResponse) ProtoMessage()               {}
func (*ByeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ByeResponse) GetResMsg() string {
	if m != nil {
		return m.ResMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "HelloResponse")
	proto.RegisterType((*ByeRequest)(nil), "ByeRequest")
	proto.RegisterType((*ByeResponse)(nil), "ByeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Sample service

type SampleClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	Bye(ctx context.Context, in *ByeRequest, opts ...grpc.CallOption) (*ByeResponse, error)
}

type sampleClient struct {
	cc *grpc.ClientConn
}

func NewSampleClient(cc *grpc.ClientConn) SampleClient {
	return &sampleClient{cc}
}

func (c *sampleClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := grpc.Invoke(ctx, "/Sample/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sampleClient) Bye(ctx context.Context, in *ByeRequest, opts ...grpc.CallOption) (*ByeResponse, error) {
	out := new(ByeResponse)
	err := grpc.Invoke(ctx, "/Sample/Bye", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Sample service

type SampleServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	Bye(context.Context, *ByeRequest) (*ByeResponse, error)
}

func RegisterSampleServer(s *grpc.Server, srv SampleServer) {
	s.RegisterService(&_Sample_serviceDesc, srv)
}

func _Sample_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sample/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sample_Bye_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServer).Bye(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Sample/Bye",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServer).Bye(ctx, req.(*ByeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sample_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Sample",
	HandlerType: (*SampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Sample_Hello_Handler,
		},
		{
			MethodName: "Bye",
			Handler:    _Sample_Bye_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sample.proto",
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe7, 0xe2, 0xf1, 0x48, 0xcd, 0xc9,
	0xc9, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe7, 0x62, 0x2f, 0x4a, 0x2d, 0x8c,
	0xcf, 0x2d, 0x4e, 0x97, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x2b, 0x4a, 0x2d, 0xf4, 0x2d,
	0x4e, 0x57, 0xd2, 0xe0, 0xe2, 0x85, 0x2a, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x85, 0xa8, 0x2c,
	0x46, 0x55, 0x59, 0x0c, 0x52, 0xa9, 0xca, 0xc5, 0xe5, 0x54, 0x99, 0x4a, 0xd0, 0x40, 0x35, 0x2e,
	0x6e, 0xb0, 0x32, 0x02, 0xc6, 0x19, 0x85, 0x71, 0xb1, 0x05, 0x83, 0x5d, 0x2c, 0xa4, 0xc1, 0xc5,
	0x0a, 0x76, 0x82, 0x10, 0xaf, 0x1e, 0xb2, 0x9b, 0xa5, 0xf8, 0xf4, 0x50, 0x5c, 0xa6, 0xc4, 0x20,
	0xa4, 0xc4, 0xc5, 0xec, 0x54, 0x99, 0x2a, 0xc4, 0xad, 0x87, 0x70, 0x88, 0x14, 0x8f, 0x1e, 0x92,
	0x75, 0x4a, 0x0c, 0x4e, 0x2c, 0x51, 0x4c, 0x05, 0x49, 0x49, 0x6c, 0xe0, 0x60, 0x30, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x3d, 0x97, 0xba, 0xc8, 0x16, 0x01, 0x00, 0x00,
}
